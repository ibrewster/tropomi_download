#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'PYTzypunSZH3eFTfI9b1HPZgyV'\
        '4b7ecc',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.1557954012200845,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,)],
                                 'selected-nodes': [(3,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('code-warnings',
                               'tall',
                               1,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.3091054313099042,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'QApplication',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'logging.',
                                       'fReverse': False,
                                       'fSearchText': u'_file_def =',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      0,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['type(test)\n',
        'isinstance(test, type(test))\n',
        '__class__\n',
        'def test(): \n  return 42\n\n',
        'from unittest.mock import Mock\n',
        'test()\n',
        'my_test = Mock(wraps = test)\n',
        'def test(): \n  prrint("Hello world!"); return 42\n\n',
        'def test(): \n  print("Hello world!"); return 42\n\n',
        'my_test = Mock(wraps = test, return_value = 242)\n',
        'my_test()\n',
        'import __builtin__\n',
        'locals.super\n',
        'locals().super\n',
        "locals['super']\n",
        'int("56")\n',
        'test = [1, 2, 3]\n',
        'test.bob = lambda:"bob"\n',
        'class takeList(list):\n    def takeAt(self, idx): \n        return '\
        'self.pop(idx)\n\n',
        'test = takeList(1, 2, 3, 4)\n',
        'test = takeList([1, 2, 3, 4])\n',
        'test.takeAt(2)\n',
        'test\n',
        'test.takeAt(0)\n',
        'test == []\n',
        'not Mock()\n',
        'test = Mock()\n',
        'test.__bool__ = Mock(return_value = True)\n',
        'test.__bool__ = Mock(return_value = False)\n',
        'not test\n',
        'sorted(["/some/path/to/file", "/some/other/file"])\n',
        'x_range = [-9981246, -4981246]\n',
        'y_range = [6500000, 11500000]\n',
        'x_dist = abs(x_range[1] - x_range[0])\n',
        'y_dist = abs(y_range[1] - y_range[0])\n',
        'sector_ratio = x_dist / y_dist \n',
        'sector_ratio\n',
        '1024 / 768\n',
        '[-9981246, -4981246] < [-10814579.333333332, -4147912.666666667]\n',
        'import satpy\n',
        'from satpy import available_readers\n',
        'available_readers()\n',
        "scn.load(wishlist, calibration='*', resolution='*', polarization='*"\
        "', level='*', generate=True, \n        unload=True)\n",
        'print(scn)\n',
        'scn.available_dataset_names()\n',
        'TEST_FILE = "/Users/israel/Desktop/Data/test_tropomi/S5P_NRTI_L2__S'\
        'O2____20200625T001925_20200625T002425_13983_01_010108_20200625T0106'\
        '42.nc"\n',
        'from satpy import Scene\n',
        'scn = Scene(filenames = [TEST_FILE, ], )\n',
        'scn\n',
        'scn.available_dataset_names(reader_name=None, composites=False)\n',
        "scn.load(['time',\n 'delta_time',\n 'latitude',\n 'longitude',\n 'q"\
        "a_value',\n 'latitude_bounds',\n 'longitude_bounds',\n 'solar_zenit"\
        "h_angle',\n 'viewing_zenith_angle',\n 'cloud_fraction_crb',\n 'sulf"\
        "urdioxide_total_vertical_column_1km',\n 'sulfurdioxide_total_vertic"\
        "al_column_7km',\n 'sulfurdioxide_total_vertical_column_15km']\n, ca"\
        "libration='*', resolution='*', polarization='*', level='*', generat"\
        "e=True, \n        unload=True)\n"]},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': "[fld.get('DEST', fld['NAME']) for lst i"\
                                    "n _file_def['GROUPS'] for fld in lst['F"\
                                    "IELDS']]\n",
                       'first-line': 99983L,
                       'folded-linenos': [],
                       'history': {None: ['file_time\n',
        'point_time_data\n'],
                                   u'file:/Applications/WingPro.app/Contents/Resources/updates/7.2.7.0/src/testing/runners/run_pytest_xml.py': ["p"\
        "ixel_paths[42] == test.so2data['pixel_paths'][42]\n",
        'pixel_paths[42]\n',
        "test.so2data['pixel_paths'][42]\n",
        "test.so2data['pixel_paths'].shape\n",
        "test.so2data['pixel_paths2'] = ('time', pixel_paths)\n",
        "test.so2data['pixel_paths2'][42]\n",
        "test.so2data['pixel_paths2']\n",
        "test.so2data['pixel_paths2'][42] == test.so2data['pixel_paths'][42]"\
        "\n",
        "test.so2data['pixel_paths2'] = pixel_paths\n",
        "(test.so2data['pixel_paths2'][42] == test.so2data['pixel_paths'][42"\
        "]).all()\n",
        'import xarray\n',
        'xarray.DataArray(dims = (size, ))\n',
        'xarray.DataArray(coords = (size, ))\n',
        'generic_test_object._plot_item.size()\n',
        'generic_test_object._plot_item.render()\n',
        'from PySide2.QtWidgets import QFrame\n',
        'test = QFrame()\n',
        'from PySide2.QtWidgets import QHBoxLayout\n',
        'lay = QHboxLayout()\n',
        'lay.addItem(generic_test_object._plot_item)\n',
        'lay.addWidget(generic_test_object._plot_item)\n',
        'from PySide2.QtWidgets import QGraphicsScene\n',
        'test = QGraphicsScene()\n',
        'test.addItem(generic_test_object._plot_item)\n',
        'test.render()\n',
        'pix = QPixmap(generic_test_object._plot_item.size())\n',
        'pix = QPixmap(generic_test_object._plot_item.size().toSize())\n',
        'pix\n',
        'test.render(pix)\n',
        'frame = QFrame()\n',
        'lay = QHBoxLayout()\n',
        'lay.addWidget(test)\n',
        'lay.addItem(test)\n',
        'QWidget(test)\n',
        'from PySide2.QtWidgets import QGraphicsWidget\n',
        'gw = QGraphicsWidget(test)\n',
        'gw = QGraphicsWidget(generic_test_object._plot_item)\n',
        'lay.addWidget(gw)\n',
        'from PySide2.QtWidgets import QGraphicsView\n',
        'gv = QGraphicsView()\n',
        'gv = QGraphicsView(generic_test_object._plot_item)\n',
        'gv = QGraphicsView(test)\n',
        'test.itemsBoundingRect()\n',
        'test.itemsBoundingRect().size()\n',
        'pix = QPixmap(test.itemsBoundingRect().size().toSize())\n',
        'gv.setFixedSize(600, 800)\n',
        'gv.fitInView(test.itemsBoundingRect())\n',
        'pix = QPixmap(600, 800)\n',
        'gv.render(pix)\n',
        'pix2 = QPixmap(600, 800)\n',
        'gv.render(pix2)\n',
        'pix == pix2\n',
        'pix.cacheKey()\n',
        'pix2.cacheKey()\n',
        'pix.toImage() == pix2.toImage()\n',
        'from PySide2.QtGui import QImage\n',
        "img = QImage('/Users/israel/Downloads/test.png')\n",
        'img == pix.toImage()\n',
        'test_img_path = os.path.join(test_file_path, "test_plot.png")\n',
        'pix.save(test_img_path)\n',
        'scene = QGraphicsScene()\n',
        'scene.addItem(generic_test_object._plot_item)\n',
        'view = QGraphicsView(scene)\n',
        'pix = QPixmap(800, 600)\n',
        "pix.save('/Users/israel/Downloads/test.png')\n",
        'view = pyqtgraph.GraphicsView()\n',
        'view.setScene(scene)\n',
        'view.setFixedSize(800, 600)\n',
        'view.fitInView(scene.itemsBoundingRect())\n',
        'view.render(pix)\n',
        'test_img\n',
        'test_img == pix.toImage()\n',
        'generic_test_object._plot_brushes\n',
        'item._mock_parent\n',
        'item_widget\n',
        'hasattr(item, "widget")\n',
        'hasattr(item, "widget()")\n',
        'item\n',
        'test = [1, 2, 3]\n',
        'test.pop(0)\n',
        'thread_start.called\n',
        'thread_start().called\n',
        'self._calc_results\n',
        'self._vb.setRange\n',
        'self._vb.setRange.call\n',
        'self._vb.setRange.calls\n',
        'self._vb.setRange.calls()\n',
        'set_call.call_args\n',
        'set_call.call_args[0]\n',
        'set_call.call_args[1]\n',
        'set_call = set_call.call_args[1]\n',
        'set_call == expected_call\n',
        "expected_call = {'xRange': [-9981246, -4981246],\n 'yRange': [56666"\
        "66.666666666, 12333333.333333334],\n 'padding': 0}\n\n",
        "expected_call = {'xRange': [-9981246, -4981246],\n                 "\
        "    'yRange': [5666666.666666665, 12333333.333333334],\n           "\
        "          'padding': 0}\n\n",
        "expected_call = {'xRange': [-9981246, -4981246],\n                 "\
        "    'yRange': [5666666.6666666665, 12333333.333333334],\n          "\
        "           'padding': 0}\n\n",
        'set_call == pytest.approx(expected_call)\n',
        "expected_call = {'xRange': [-9981246, -4981246],\n                 "\
        "    'yRange': [5666666.666665, 12333333.333333334],\n              "\
        "       'padding': 0}\n\n",
        'set_call == pytest.approx(expected_call, rel = 1e-3)\n',
        'set_call == pytest.approx(expected_call, rel = 1e-3, abs = 1e-3)\n',
        "set_call['yRange'] == pytest.approx(expected_call['yRange'], rel = "\
        "1e-3, abs = 1e-3)\n"],
                                   u'file:/Users/israel/Development/tropomi_download/xarray_import.py': ['('\
        'x / 1000).astype(float) + datetime(2010, 1, 1, tzinfo=timezone.utc)'\
        '.timestamp()\n',
        'raw_data[file_time_group][file_time_name].astype(float).data\n',
        'file_time = raw_data[file_time_group][file_time_name].astype(float)'\
        '.data\n',
        'point_time_data = point_time_data + file_time\n',
        "da['latitude']\n",
        'data\n',
        "data.coords[dest] = ('time', da[name])\n",
        'point_time_data.astype(float)\n',
        'point_time_data.astype(float) / 1000\n',
        'point_time_data.astype(float) / 1000 + 1262304000.0\n',
        'raw_data[file_time_group][file_time_name].to_pydatetime()\n',
        'file_time / 10000\n',
        'point_time_data + raw_data[file_time_group][file_time_name]\n',
        'raw_data[file_time_group][file_time_name].astype(datetime) / 10000'\
        '\n',
        'raw_data[file_time_group][file_time_name].data\n',
        'datetime(raw_data[file_time_group][file_time_name].astype(datetime)'\
        ')\n',
        'raw_data[file_time_group][file_time_name].astype(datetime)\n',
        'raw_data[file_time_group][file_time_name] / 1e9\n',
        'raw_data[file_time_group][file_time_name].astype(datetime) / 1e9\n',
        'raw_data[file_time_group][file_time_name].astype(int) / 1e9\n',
        '(point_time_data / 10000).astype(int)\n',
        '(point_time_data / 10000).astype(float)\n',
        'point_time_data / 10000\n',
        'x\n',
        'x / 10000\n',
        '(x / 10000).astype(int)\n',
        '(x / 10000).astype(int) + datetime(2010, 1, 1, tzinfo=timezone.utc)'\
        '.timestamp()\n',
        'datetime(2010, 1, 1, tzinfo=timezone.utc).timestamp()\n',
        'from datetime import datetime\n',
        'from datetime import timezone\n',
        'point_time_data + datetime(2010, 1, 1, tzinfo=timezone.utc)\n',
        'point_time_data + numpy.datetime64(datetime(2010, 1, 1, tzinfo=time'\
        'zone.utc))\n',
        'file_time = raw_data[file_time_group][file_time_name]\n',
        'point_time_data + file_time\n',
        'from datetime import timedelta\n',
        'point_time_data.astype(timedelta) + file_time\n',
        'import numpy\n',
        'point_time_data.astype(numpy.timedelta64) + file_time\n',
        'point_time_data.astype(numpy.timedelta64) + file_time.data\n',
        'point_time_data.astype(int) / 10000\n',
        'point_time_data.astype(int) / 1e7\n',
        'point_time_data.astype(int) / 1e6\n',
        'point_time_data / 1e6\n',
        '(point_time_data / 1e6).astype(int)\n',
        'file_time\n',
        'point_time_data.astype(int)\n',
        "file_time_group = file_def['INFO'].get('file_time', {}).get('GROUP'"\
        ")\n",
        "file_time_name = file_def['INFO'].get('file_time', {}).get('NAME')"\
        "\n",
        'raw_data[file_time_group][file_time_name]\n',
        'raw_data[file_time_group][file_time_name] + point_time_data\n',
        'point_time_data\n',
        "point_time_data.astype('o')\n",
        'point_time_data.astype(object)\n',
        'point_time_data.astype(object).timestamp()\n',
        'point_time_data.astype(object) / 1e9\n',
        'point_time_data.astype(int) / 1e9\n',
        "field_data.squeeze([\"scanline\", 'ground_pixel'])\n",
        "field_data.stack([\"scanline\", 'ground_pixel'])\n",
        "field_data.stack(time=[\"scanline\", 'ground_pixel'])\n",
        "field_data.squeeze(\"time\").stack(time=[\"scanline\", 'ground_pixe"\
        "l'])\n",
        "field_data.squeeze(\"time\").stack(time=[\"scanline\", 'ground_pixe"\
        "l']).set_index(time = \"time\")\n",
        'da.stack(["scanline", "ground_pixel"])\n',
        'da.stack(time2=["scanline", "ground_pixel"])\n',
        'da.squeeze("time").stack(time=["scanline", "ground_pixel"])\n',
        "da.squeeze(\"time\").stack(time=[\"scanline\", \"ground_pixel\"]).r"\
        "eset_index('time')\n",
        'field_data\n',
        'data.coords[dest] = field_data\n',
        "[x['NAME'] for x in group_def['FIELDS']]\n",
        'da.attrs\n',
        'da\n',
        'da.variables\n',
        'da.keys()\n',
        'list(da.keys())\n',
        "list(da.keys()) - [x['NAME'] for x in group_def['FIELDS']]\n",
        "list(da.keys()) - {x['NAME'] for x in group_def['FIELDS']}\n",
        "set(da.keys()) - {x['NAME'] for x in group_def['FIELDS']}\n",
        "drop_list = set(da.keys()) - {x['NAME'] for x in group_def['FIELDS'"\
        "]}\n",
        'drop_list\n',
        'da.drop(drop_list)\n',
        'fields = list(fields)\n',
        'da[fields]\n',
        'test[fields] = da[fields]\n',
        'test.merge(da[fields])\n',
        'raw_data.values()\n',
        'xarray.merge(raw_data.values())\n',
        "xarray.merge(raw_data.values()).squeeze(\"time\").stack(time=[\"sca"\
        "nline\", \"ground_pixel\"]).reset_index('time')\n",
        "s = time.time();xarray.merge(raw_data.values()).squeeze(\"time\").s"\
        "tack(time=[\"scanline\", \"ground_pixel\"]).reset_index('time')\n",
        "s = time.time();xarray.merge(raw_data.values()).squeeze(\"time\").s"\
        "tack(time=[\"scanline\", \"ground_pixel\"]).reset_index('time');tim"\
        "e.time() - s\n",
        "[[x['name'] for y in x['FIELDS']] for x in file_def['GROUPS']]\n",
        "[y['NAME'] for y in x['FIELDS'] for x in file_def['GROUPS']]\n",
        "[y['NAME'] for y in [x['FIELDS'] for x in file_def['GROUPS']]]\n",
        "[x['FIELDS'] for x in file_def['GROUPS']]\n",
        "[y for y in [x['FIELDS'] for x in file_def['GROUPS']]]\n",
        "[[y for y in x['FIELDS']] for x in file_def['GROUPS']]\n",
        "[[y['NAME'] for y in x['FIELDS']] for x in file_def['GROUPS']]\n",
        "for group in file_def['GROUPS']:\n    for field in group['FIELD']:"\
        "\n        print(field['NAME'])\n\n",
        "for group in file_def['GROUPS']:\n    for field in group['FIELDS']:"\
        "\n        print(field['NAME'])\n\n",
        'fields = []\n',
        "for group in file_def['GROUPS']:\n    for field in group['FIELDS']:"\
        "\n        fields.append(field['NAME'])\n\n",
        'fields\n'],
                                   u'file:/Users/israel/Development/tropomi_download/xarrayimport.py': ["["\
        "\n                y['FIELDS']\n                for y in _file_def['"\
        "GROUPS']\n            ]\n\n",
        "[\n                y['FIELDS']\n                for y in _file_def["\
        "'GROUPS']\n            ]\n_file_def['GROUPS']\n\n",
        "_file_def['GROUPS']\n",
        "[x['FIELDS'] for x in _file_def['GROUPS']]\n",
        "[fld.get('DEST', fld['NAME']) for fld in [lst for lst in [x['FIELDS"\
        "'] for x in _file_def['GROUPS']]]\n ]\n",
        "[fld for fld in [lst for lst in [x['FIELDS'] for x in _file_def['GR"\
        "OUPS']]]\n ]\n\n",
        "[fld for fld in [lst for lst in [x['FIELDS'] for x in _file_def['GR"\
        "OUPS']]]]\n",
        "[lst for lst in [x['FIELDS'] for x in _file_def['GROUPS']]]\n",
        "for lst in [lst for lst in [x['FIELDS'] for x in _file_def['GROUPS'"\
        "]]]:\n   print(lst)\n\n",
        "for lst in [lst for lst in [x['FIELDS'] for x in _file_def['GROUPS'"\
        "]]]:\n   for field in lst:\n       field.get('DEST', field['NAME'])"\
        "\n\n",
        "for lst in [lst for lst in [x['FIELDS'] for x in _file_def['GROUPS'"\
        "]]]:\n   for field in lst:\n       print(field.get('DEST', field['N"\
        "AME']))\n\n",
        "[fld.get('DEST', fld['NAME']) for lst in [x['FIELDS'] for x in _fil"\
        "e_def['GROUPS']] for fld in lst]\n",
        "for x in _file_def['GROUPS']:\n   for lst in x['FIELDS']:\n      fo"\
        "r fld in lst:\n         print(fld.get('DEST', fld['NAME']))\n\n",
        "for x in _file_def['GROUPS']:\n   for lst in x['FIELDS']:\n      fo"\
        "r fld in lst:\n         print(fld)\n\n",
        "for x in _file_def['GROUPS']:\n   for lst in x['FIELDS']:\n      pr"\
        "int('lst')\n\n",
        "for x in _file_def['GROUPS']:\n   for lst in x['FIELDS']:\n      pr"\
        "int(lst)\n\n",
        "for x in _file_def['GROUPS']:\n   for lst in x['FIELDS']:\n      pr"\
        "int(lst)\n[fld.get('DEST', fld['NAME']) for lst in _file_def['GROUP"\
        "S'] for fld in lst['FIELDS']]\n\n",
        "[fld.get('DEST', fld['NAME']) for lst in _file_def['GROUPS'] for fl"\
        "d in lst['FIELDS']]\n"]},
                       'launch-id': None,
                       'sel-line': 99987L,
                       'sel-line-start': 2175426L,
                       'selection_end': 2175512L,
                       'selection_start': 2175426L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.5082152974504249,
        ({'bookmarks': ([(loc('xarray_import.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        9)],
                           'code-line': '        # Find offset, as a timesta'\
        'mp\n',
                           'first-line': 1L,
                           'folded-linenos': [],
                           'sel-line': 31L,
                           'sel-line-start': 1058L,
                           'selection_end': 1095L,
                           'selection_start': 1095L,
                           'zoom': 0L},
                          1618262002.637094),
                         [loc('../tropomi_gui/TROPOMIQt/codaimport.py'),
                          {'attrib-starts': [],
                           'code-line': "    FILTER_STRING = ''\n",
                           'first-line': 706L,
                           'folded-linenos': [],
                           'sel-line': 793L,
                           'sel-line-start': 28694L,
                           'selection_end': 28716L,
                           'selection_start': 28716L,
                           'zoom': 0L},
                          1618262200.540965],
                         [loc('file_formats/tropomi.py'),
                          {'attrib-starts': [],
                           'code-line': '                },\n',
                           'first-line': 6L,
                           'folded-linenos': [],
                           'sel-line': 29L,
                           'sel-line-start': 549L,
                           'selection_end': 567L,
                           'selection_start': 567L,
                           'zoom': 0L},
                          1618262205.025369],
                         [loc('xarray_import.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        9)],
                           'code-line': '    if time_op:\n',
                           'first-line': 17L,
                           'folded-linenos': [],
                           'sel-line': 26L,
                           'sel-line-start': 829L,
                           'selection_end': 844L,
                           'selection_start': 844L,
                           'zoom': 0L},
                          1618262903.610794],
                         [loc('lib/python3.8/site-packages/xarray/core/common.py'),
                          {'attrib-starts': [('AttrAccessMixin|0|',
        199),
        ('AttrAccessMixin|0|.__setattr__|0|',
         261)],
                           'code-line': '            object.__setattr__(self'\
        ', name, value)\n',
                           'first-line': 221L,
                           'folded-linenos': [],
                           'sel-line': 267L,
                           'sel-line-start': 8669L,
                           'selection_end': 8669L,
                           'selection_start': 8669L,
                           'zoom': 0L},
                          1618262920.496691],
                         [loc('xarray_import.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        9)],
                           'code-line': '            field_data.shape = flat'\
        '_shape\n',
                           'first-line': 17L,
                           'folded-linenos': [],
                           'sel-line': 51L,
                           'sel-line-start': 1804L,
                           'selection_end': 1804L,
                           'selection_start': 1804L,
                           'zoom': 0L},
                          1618263195.951586],
                         [loc('lib/python3.8/site-packages/xarray/core/common.py'),
                          {'attrib-starts': [('get_squeeze_dims|0|',
        307)],
                           'code-line': '        raise ValueError(\n',
                           'first-line': 288L,
                           'folded-linenos': [],
                           'sel-line': 333L,
                           'sel-line-start': 11058L,
                           'selection_end': 11058L,
                           'selection_start': 11058L,
                           'zoom': 0L},
                          1618263567.568444],
                         [loc('lib/python3.8/site-packages/xarray/core/utils.py'),
                          {'attrib-starts': [('either_dict_or_kwargs|0|',
        272)],
                           'code-line': '            raise ValueError(\n',
                           'first-line': 274L,
                           'folded-linenos': [],
                           'sel-line': 279L,
                           'sel-line-start': 8026L,
                           'selection_end': 8026L,
                           'selection_start': 8026L,
                           'zoom': 0L},
                          1618263568.259333],
                         [loc('lib/python3.8/site-packages/xarray/core/variable.py'),
                          {'attrib-starts': [('Variable|0|',
        295),
        ('Variable|0|.stack|0|',
         1524)],
                           'code-line': '        Parameters\n',
                           'first-line': 1500L,
                           'folded-linenos': [],
                           'sel-line': 1531L,
                           'sel-line-start': 56229L,
                           'selection_end': 56247L,
                           'selection_start': 56247L,
                           'zoom': 0L},
                          1618263569.324889],
                         [loc('xarray_import.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        9)],
                           'code-line': "            flat_shape = (-1, *fiel"\
        "d_data.shape[file_def['INFO']['nDims']:])\n",
                           'first-line': 17L,
                           'folded-linenos': [],
                           'sel-line': 51L,
                           'sel-line-start': 1820L,
                           'selection_end': 1896L,
                           'selection_start': 1896L,
                           'zoom': 0L},
                          1618264423.651623],
                         [loc('lib/python3.8/site-packages/xarray/core/variable.py'),
                          {'attrib-starts': [('as_variable|0|',
        85)],
                           'code-line': '            raise error.__class__('\
        '\n',
                           'first-line': 131L,
                           'folded-linenos': [],
                           'sel-line': 136L,
                           'sel-line-start': 3754L,
                           'selection_end': 3754L,
                           'selection_start': 3754L,
                           'zoom': 0L},
                          1618264436.299367],
                         [loc('xarray_import.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        9)],
                           'code-line': '    raw_data = {}\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 11L,
                           'sel-line-start': 267L,
                           'selection_end': 284L,
                           'selection_start': 284L,
                           'zoom': 0L},
                          1618417490.753931],
                         [loc('lib/python3.8/site-packages/xarray/core/common.py'),
                          {'attrib-starts': [('DataWithCoords|0|',
        340),
        ('DataWithCoords|0|.get_index|0|',
         382)],
                           'code-line': '            raise KeyError(key)\n',
                           'first-line': 340L,
                           'folded-linenos': [],
                           'sel-line': 385L,
                           'sel-line-start': 12731L,
                           'selection_end': 12731L,
                           'selection_start': 12731L,
                           'zoom': 0L},
                          1618424688.788084],
                         [loc('file_formats/tropomi.py'),
                          {'attrib-starts': [],
                           'code-line': "        'point_time': {'GROUP': \""\
        "PRODUCT\",\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 18L,
                           'sel-line-start': 255L,
                           'selection_end': 297L,
                           'selection_start': 297L,
                           'zoom': 0L},
                          1618425896.012338],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [],
                           'code-line': '"""\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618425900.75704],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_file|0|',
         716)],
                           'code-line': "                            for y i"\
        "n _file_def['GROUPS']]\n",
                           'first-line': 716L,
                           'folded-linenos': [],
                           'sel-line': 739L,
                           'sel-line-start': 26619L,
                           'selection_end': 26665L,
                           'selection_start': 26656L,
                           'zoom': 0L},
                          1618425917.720021],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [],
                           'code-line': '_file_def = {}\n',
                           'first-line': 52L,
                           'folded-linenos': [],
                           'sel-line': 77L,
                           'sel-line-start': 1955L,
                           'selection_end': 1964L,
                           'selection_start': 1955L,
                           'zoom': 0L},
                          1618425921.022641],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_file|0|',
         716)],
                           'code-line': "                            for y i"\
        "n _file_def['GROUPS']]\n",
                           'first-line': 696L,
                           'folded-linenos': [],
                           'sel-line': 739L,
                           'sel-line-start': 26619L,
                           'selection_end': 26665L,
                           'selection_start': 26656L,
                           'zoom': 0L},
                          1618425924.431261],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [],
                           'code-line': '    _FILE_DEFS[module.__TYPE__] = m'\
        'odule.DEF\n',
                           'first-line': 89L,
                           'folded-linenos': [],
                           'sel-line': 94L,
                           'sel-line-start': 2707L,
                           'selection_end': 2720L,
                           'selection_start': 2711L,
                           'zoom': 0L},
                          1618425930.642749],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': '        for filedef in files:\n',
                           'first-line': 269L,
                           'folded-linenos': [],
                           'sel-line': 282L,
                           'sel-line-start': 8730L,
                           'selection_end': 8759L,
                           'selection_start': 8759L,
                           'zoom': 0L},
                          1618427758.955818]],
                        20),
          'current-loc': None,
          'editor-state-list': [(loc('lib/python3.8/site-packages/xarray/core/alignment.py'),
                                 {'attrib-starts': [('align|0|',
        73)],
                                  'code-line': '                raise ValueE'\
        'rror(\n',
                                  'first-line': 285L,
                                  'folded-linenos': [],
                                  'sel-line': 331L,
                                  'sel-line-start': 10763L,
                                  'selection_end': 10763L,
                                  'selection_start': 10763L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/xarray/core/dataset.py'),
                                 {'attrib-starts': [('Dataset|0|',
        511),
        ('Dataset|0|.__setitem__|0|',
         1412)],
                                  'code-line': '        self.update({key: va'\
        'lue})\n',
                                  'first-line': 1383L,
                                  'folded-linenos': [],
                                  'sel-line': 1428L,
                                  'sel-line-start': 47023L,
                                  'selection_end': 47023L,
                                  'selection_start': 47023L,
                                  'zoom': 0L}),
                                (loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py'),
                                 {'attrib-starts': [('import_module|0|',
        108)],
                                  'code-line': '            raise TypeError('\
        'msg.format(name))\n',
                                  'first-line': 89L,
                                  'folded-linenos': [],
                                  'sel-line': 121L,
                                  'sel-line-start': 4324L,
                                  'selection_end': 4324L,
                                  'selection_start': 4324L,
                                  'zoom': 0L}),
                                (loc('file_formats/tropomi.py'),
                                 {'attrib-starts': [],
                                  'code-line': "        'point_time': {'GROU"\
        "P': \"PRODUCT\",\n",
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 18L,
                                  'sel-line-start': 255L,
                                  'selection_end': 297L,
                                  'selection_start': 297L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/xarray/core/utils.py'),
                                 {'attrib-starts': [('SortedKeysDict|0|',
        484),
        ('SortedKeysDict|0|.__getitem__|0|',
         495)],
                                  'code-line': '        return self.mapping['\
        'key]\n',
                                  'first-line': 451L,
                                  'folded-linenos': [],
                                  'sel-line': 496L,
                                  'sel-line-start': 14302L,
                                  'selection_end': 14302L,
                                  'selection_start': 14302L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/xarray/core/variable.py'),
                                 {'attrib-starts': [('as_variable|0|',
        85)],
                                  'code-line': '            raise error.__cl'\
        'ass__(\n',
                                  'first-line': 131L,
                                  'folded-linenos': [],
                                  'sel-line': 136L,
                                  'sel-line-start': 3754L,
                                  'selection_end': 3754L,
                                  'selection_start': 3754L,
                                  'zoom': 0L}),
                                (loc('xarrayimport.py'),
                                 {'attrib-starts': [('_CodaFile|0|',
        243),
        ('_CodaFile|0|.import_product|0|',
         255)],
                                  'code-line': '            if "*" in filede'\
        'f or "?" in filedef:\n',
                                  'first-line': 282L,
                                  'folded-linenos': [],
                                  'sel-line': 296L,
                                  'sel-line-start': 9101L,
                                  'selection_end': 9144L,
                                  'selection_start': 9144L,
                                  'zoom': 0L})],
          'has-focus': False,
          'locked': False},
         [loc('lib/python3.8/site-packages/xarray/core/alignment.py'),
          loc('lib/python3.8/site-packages/xarray/core/dataset.py'),
          loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py'),
          loc('file_formats/tropomi.py'),
          loc('unknown:untitled-5.py'),
          loc('lib/python3.8/site-packages/xarray/core/utils.py'),
          loc('lib/python3.8/site-packages/xarray/core/variable.py'),
          loc('xarrayimport.py')]),
        ({'bookmarks': ([[loc('xarray_import.py'),
                          {'attrib-starts': [],
                           'code-line': 'import time\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618424505.835496],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        119)],
                           'code-line': "            if dest in ['latitude',"\
        " 'longitude', 'latitude_bounds', 'longitude_bounds']:\n",
                           'first-line': 125L,
                           'folded-linenos': [],
                           'sel-line': 159L,
                           'sel-line-start': 4966L,
                           'selection_end': 4977L,
                           'selection_start': 4977L,
                           'zoom': 0L},
                          1618424645.230791],
                         [loc('lib/python3.8/site-packages/xarray/core/common.py'),
                          {'attrib-starts': [('DataWithCoords|0|',
        340),
        ('DataWithCoords|0|.squeeze|0|',
         349)],
                           'code-line': '        self,\n',
                           'first-line': 339L,
                           'folded-linenos': [],
                           'sel-line': 350L,
                           'sel-line-start': 11453L,
                           'selection_end': 11466L,
                           'selection_start': 11466L,
                           'zoom': 0L},
                          1618424688.884905],
                         [loc('file_formats/tropomi.py'),
                          {'attrib-starts': [],
                           'code-line': "        'nDims': 3,\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 12L,
                           'sel-line-start': 113L,
                           'selection_end': 132L,
                           'selection_start': 132L,
                           'zoom': 0L},
                          1618424692.960195],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        119)],
                           'code-line': '\n',
                           'first-line': 125L,
                           'folded-linenos': [],
                           'sel-line': 166L,
                           'sel-line-start': 5178L,
                           'selection_end': 5178L,
                           'selection_start': 5178L,
                           'zoom': 0L},
                          1618424943.087332],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': "            'bin': template['bin'],"\
        "\n",
                           'first-line': 276L,
                           'folded-linenos': [],
                           'sel-line': 321L,
                           'sel-line-start': 10132L,
                           'selection_end': 10147L,
                           'selection_start': 10145L,
                           'zoom': 0L},
                          1618424944.663947],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': "            'bin': template['bin'],"\
        "\n",
                           'first-line': 276L,
                           'folded-linenos': [],
                           'sel-line': 321L,
                           'sel-line-start': 10132L,
                           'selection_end': 10148L,
                           'selection_start': 10145L,
                           'zoom': 0L},
                          1618424946.546094],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': "            'bin': template['bin'],"\
        "\n",
                           'first-line': 276L,
                           'folded-linenos': [],
                           'sel-line': 321L,
                           'sel-line-start': 10132L,
                           'selection_end': 10164L,
                           'selection_start': 10161L,
                           'zoom': 0L},
                          1618424947.106114],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': '                    # Two types of '\
        'filters: function filters like bin_spatial()\n',
                           'first-line': 361L,
                           'folded-linenos': [],
                           'sel-line': 406L,
                           'sel-line-start': 13684L,
                           'selection_end': 13753L,
                           'selection_start': 13750L,
                           'zoom': 0L},
                          1618424948.139718],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': "                        if func == "\
        "'bin_spatial':\n",
                           'first-line': 375L,
                           'folded-linenos': [],
                           'sel-line': 410L,
                           'sel-line-start': 13925L,
                           'selection_end': 13964L,
                           'selection_start': 13961L,
                           'zoom': 0L},
                          1618424949.593715],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': "                            break  "\
        "# We can't bin until we have all the data, so we have to stop here."\
        "\n",
                           'first-line': 375L,
                           'folded-linenos': [],
                           'sel-line': 411L,
                           'sel-line-start': 13975L,
                           'selection_end': 14024L,
                           'selection_start': 14021L,
                           'zoom': 0L},
                          1618424950.473458],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|.import_product|0|',
         242)],
                           'code-line': '                # Two types of filt'\
        'ers: function filters like bin_spatial()\n',
                           'first-line': 420L,
                           'folded-linenos': [],
                           'sel-line': 465L,
                           'sel-line-start': 16356L,
                           'selection_end': 16421L,
                           'selection_start': 16418L,
                           'zoom': 0L},
                          1618424951.793936],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_spatial|0|',
         608)],
                           'code-line': '    def _bin_spatial(self, num_lat,'\
        ' lat_from, lat_step, num_lon, lon_from, lon_step,\n',
                           'first-line': 563L,
                           'folded-linenos': [],
                           'sel-line': 608L,
                           'sel-line-start': 21071L,
                           'selection_end': 21083L,
                           'selection_start': 21080L,
                           'zoom': 0L},
                          1618424952.649275],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_spatial|0|',
         608)],
                           'code-line': '        # When loading file, keep l'\
        'ist of indexes for each data file. Then bin in chunks, with each\n',
                           'first-line': 575L,
                           'folded-linenos': [],
                           'sel-line': 610L,
                           'sel-line-start': 21189L,
                           'selection_end': 21267L,
                           'selection_start': 21264L,
                           'zoom': 0L},
                          1618424953.418309],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_spatial|0|',
         608)],
                           'code-line': '        target_def = create_area_de'\
        'f("Binned", proj_dict, area_extent=area_extent,\n',
                           'first-line': 599L,
                           'folded-linenos': [],
                           'sel-line': 643L,
                           'sel-line-start': 22434L,
                           'selection_end': 22475L,
                           'selection_start': 22472L,
                           'zoom': 0L},
                          1618424955.161778],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_spatial|0|',
         608)],
                           'code-line': '        binned_file_data = None\n',
                           'first-line': 622L,
                           'folded-linenos': [],
                           'sel-line': 666L,
                           'sel-line-start': 23472L,
                           'selection_end': 23483L,
                           'selection_start': 23480L,
                           'zoom': 0L},
                          1618424956.201024],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_spatial|0|',
         608)],
                           'code-line': '#         binned_size = target_def.'\
        'shape\n',
                           'first-line': 634L,
                           'folded-linenos': [],
                           'sel-line': 668L,
                           'sel-line-start': 23547L,
                           'selection_end': 23560L,
                           'selection_start': 23557L,
                           'zoom': 0L},
                          1618424959.553284],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_spatial|0|',
         608)],
                           'code-line': "#             if (key in _file_def["\
        "'fields'] and _file_def['fields'][key]['bin']) or key in ['latitude"\
        "', 'longitude']:\n",
                           'first-line': 634L,
                           'folded-linenos': [],
                           'sel-line': 672L,
                           'sel-line-start': 23695L,
                           'selection_end': 23773L,
                           'selection_start': 23769L,
                           'zoom': 0L},
                          1618424965.768263],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_CodaFile|0|',
        230),
        ('_CodaFile|0|._bin_file|0|',
         716)],
                           'code-line': "                radius = _file_def."\
        "get('info', {}).get('binRadius', 5e4)\n",
                           'first-line': 680L,
                           'folded-linenos': [],
                           'sel-line': 725L,
                           'sel-line-start': 25918L,
                           'selection_end': 25977L,
                           'selection_start': 25973L,
                           'zoom': 0L},
                          1618424966.913296],
                         [loc('xarrayimport.py'),
                          {'attrib-starts': [('_load_file_data|0|',
        119)],
                           'code-line': '            if _term_flag.is_set():'\
        '\n',
                           'first-line': 143L,
                           'folded-linenos': [],
                           'sel-line': 159L,
                           'sel-line-start': 4895L,
                           'selection_end': 4920L,
                           'selection_start': 4910L,
                           'zoom': 0L},
                          1618428222.855498]],
                        20),
          'current-loc': loc('xarrayimport.py'),
          'editor-state-list': [(loc('lib/python3.8/site-packages/xarray/core/alignment.py'),
                                 {}),
                                (loc('lib/python3.8/site-packages/xarray/core/dataset.py'),
                                 {}),
                                (loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py'),
                                 {'attrib-starts': [('import_module|0|',
        108)],
                                  'code-line': '            raise TypeError('\
        'msg.format(name))\n',
                                  'first-line': 89L,
                                  'folded-linenos': [],
                                  'sel-line': 121L,
                                  'sel-line-start': 4324L,
                                  'selection_end': 4324L,
                                  'selection_start': 4324L,
                                  'zoom': 0L}),
                                (loc('file_formats/tropomi.py'),
                                 {'attrib-starts': [],
                                  'code-line': "        'nDims': 3,\n",
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 12L,
                                  'sel-line-start': 113L,
                                  'selection_end': 132L,
                                  'selection_start': 132L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/xarray/core/utils.py'),
                                 {'attrib-starts': [('either_dict_or_kwargs|'\
        '0|',
        272)],
                                  'code-line': '            raise ValueError'\
        '(\n',
                                  'first-line': 274L,
                                  'folded-linenos': [],
                                  'sel-line': 279L,
                                  'sel-line-start': 8026L,
                                  'selection_end': 8026L,
                                  'selection_start': 8026L,
                                  'zoom': 0L}),
                                (loc('lib/python3.8/site-packages/xarray/core/variable.py'),
                                 {'attrib-starts': [('Variable|0|',
        295),
        ('Variable|0|.stack|0|',
         1524)],
                                  'code-line': '        Parameters\n',
                                  'first-line': 1500L,
                                  'folded-linenos': [],
                                  'sel-line': 1531L,
                                  'sel-line-start': 56229L,
                                  'selection_end': 56247L,
                                  'selection_start': 56247L,
                                  'zoom': 0L}),
                                (loc('xarrayimport.py'),
                                 {'attrib-starts': [('_load_file_data|0|',
        119)],
                                  'code-line': "            _PROGRESS_QUEUE."\
        "put('PROGRESS')\n",
                                  'first-line': 143L,
                                  'folded-linenos': [],
                                  'sel-line': 175L,
                                  'sel-line-start': 5457L,
                                  'selection_end': 5500L,
                                  'selection_start': 5500L,
                                  'zoom': 0L})],
          'has-focus': True,
          'locked': False},
         [loc('lib/python3.8/site-packages/xarray/core/alignment.py'),
          loc('lib/python3.8/site-packages/xarray/core/dataset.py'),
          loc('../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py'),
          loc('file_formats/tropomi.py'),
          loc('unknown:untitled-5.py'),
          loc('lib/python3.8/site-packages/xarray/core/utils.py'),
          loc('lib/python3.8/site-packages/xarray/core/variable.py'),
          loc('xarrayimport.py')])),
                               'open_files': [u'../../../../Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py',
        u'lib/python3.8/site-packages/xarray/core/alignment.py',
        u'file_formats/tropomi.py',
        u'xarrayimport.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5162534435261708},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1618428268.940644),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1618428213.842429),
                 'user_data': {}},
        'window-alloc': (276,
                         23,
                         2099,
                         1361)}]}
guimgr.recent-documents = [loc('xarrayimport.py'),
                           loc('unknown:untitled-5.py'),
                           loc('file_formats/tropomi.py'),
                           loc('lib/python3.8/site-packages/xarray/core/utils.py'),
                           loc('lib/python3.8/site-packages/xarray/core/dataset.py'),
                           loc('lib/python3.8/site-packages/xarray/core/variable.py')]
guimgr.visual-state = {loc('../../Desktop/Data/test_tropomi/S5P_NRTI_L2__SO2____20200625T001925_20200625T002425_13983_01_010108_20200625T010642.nc'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('file_formats/tropomi.py'): {'attrib-starts': [],
        'code-line': "                'operation': _s5p_validity,\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 466L,
        'selection_end': 508L,
        'selection_start': 508L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/xarray/backends/netCDF4_.py'): {'a'\
        'ttrib-starts': [('_nc4_require_group|0|',
                          161)],
        'code-line': '                    raise OSError("group not found: %s'\
                     '" % key, e)\n',
        'first-line': 133L,
        'folded-linenos': [],
        'sel-line': 179L,
        'sel-line-start': 5771L,
        'selection_end': 5771L,
        'selection_start': 5771L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/xarray/core/common.py'): {'a'\
        'ttrib-starts': [('DataWithCoords|0|',
                          340),
                         ('DataWithCoords|0|.squeeze|0|',
                          349)],
        'code-line': '        self,\n',
        'first-line': 339L,
        'folded-linenos': [],
        'sel-line': 350L,
        'sel-line-start': 11453L,
        'selection_end': 11466L,
        'selection_start': 11466L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/xarray/core/computation.py'): {'a'\
        'ttrib-starts': [('apply_variable_ufunc|0|',
                          603)],
        'code-line': '                raise ValueError(\n',
        'first-line': 716L,
        'folded-linenos': [],
        'sel-line': 751L,
        'sel-line-start': 24617L,
        'selection_end': 24617L,
        'selection_start': 24617L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/xarray/core/utils.py'): {'a'\
        'ttrib-starts': [('either_dict_or_kwargs|0|',
                          272)],
        'code-line': '            raise ValueError(\n',
        'first-line': 274L,
        'folded-linenos': [],
        'sel-line': 279L,
        'sel-line-start': 8026L,
        'selection_end': 8026L,
        'selection_start': 8026L,
        'zoom': 0L},
                       loc('lib/python3.8/site-packages/xarray/core/variable.py'): {'a'\
        'ttrib-starts': [('Variable|0|',
                          295),
                         ('Variable|0|.stack|0|',
                          1524)],
        'code-line': '        Parameters\n',
        'first-line': 1500L,
        'folded-linenos': [],
        'sel-line': 1531L,
        'sel-line-start': 56229L,
        'selection_end': 56247L,
        'selection_start': 56247L,
        'zoom': 0L},
                       loc('xarray_import.py'): {'attrib-starts': [],
        'code-line': 'import time\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../tropomi_gui/TROPOMIQt/codaimport.py'): {'attr'\
        'ib-starts': [('_load_file_data|0|',
                       121)],
        'code-line': "    file_time_path = file_def['info'].get('file_time',"\
                     " {}).get('path', None)\n",
        'first-line': 118L,
        'folded-linenos': [],
        'sel-line': 141L,
        'sel-line-start': 4272L,
        'selection_end': 4348L,
        'selection_start': 4348L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('activate',
                      'source /Users/israel/Development/tropomi_download/bin'\
                      '/activate')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.search-history = [u"'bin',",
                         u"'bin",
                         u'bin']
testing.stored-results = (1,
                          [],
                          {})
